{"version":3,"sources":["context/AuthContext.js","components/Navbar.js","hooks/dropmenu.hook.js","components/StyledInput.js","hooks/http.hook.js","hooks/message.hook.js","components/Modal.js","components/Table.js","components/Loader.js","components/Pagination.js","pages/TaskPage.js","pages/AuthPage.js","App.js","hooks/auth.hook.js","routes.js","reportWebVitals.js","index.js"],"names":["nothing","AuthContext","createContext","token","userId","userFirstName","userSecondName","userMiddleName","login","logout","isAuth","loginReady","Navbar","dropdownRef","useRef","el","initialState","useState","isActive","setIsActive","useEffect","onClick","e","current","contains","target","window","addEventListener","removeEventListener","useDetectOutsideClick","modalIsOpen","setIsOpen","auth","useContext","history","useHistory","className","style","marginLeft","ref","href","id","marginRight","event","preventDefault","push","isOpen","onRequestClose","content","top","left","right","bottom","transform","contentLabel","styled","input","useHttp","loading","setLoading","err","setErr","req","useCallback","url","a","method","body","headers","JSON","stringify","fetch","res","json","data","ok","Error","message","clearErr","useMessage","text","M","toast","html","ModalComp","props","Modal","setAppElement","document","getElementById","rowData","form","setForm","priorityOptions","value","label","statusOptions","changeHandler","name","selectChangeHandler","opt","ctx","sendButtonHandler","buttonLnk","creator","Authorization","sendData","rerender","onClose","visible","width","height","overlay","zIndex","display","textAlign","marginTop","fontSize","color","cursor","header","StyledInput","readOnly","isOwner","type","title","onChange","htmlFor","description","endingAt","isDisabled","options","find","obj","priority","paddingBottom","status","responsibleOptions","responsible","float","disabled","MyTable","setModalIsOpen","modalHeader","setModalHeader","setIsOwner","buttonLink","setButtonLink","addModalContext","dateFormat","Date","modalContext","setModalContext","convertStatus","convertPriority","getStrColor","checkIdInResponsibleArr","resId","editTR","task","taskCreatorId","Object","keys","tableData","forEach","key","Number","length","tableHeaders","map","index","toUpperCase","updatedAt","taskData","firstName","secondName","middleName","Loader","MyPagination","queryParams","useLocation","search","currentPage","setCurrentPage","activePage","itemsCountPerPage","totalItemsCount","maxPages","pageRangeDisplayed","itemClass","pageNum","newQueryLink","URLSearchParams","get","set","hideFirstLastPages","TaskPage","queryLink","tasks","setTasks","rerenderTable","setRerenderTable","setResponsible","getData","getResponsible","resps","getCurrentPage","AuthPage","pass","updateTextFields","loginHandler","keypressHandler","paddingLeft","placeholder","onKeyPress","App","setToken","localAuthReady","setLocalAuthReady","setLoginReady","setUserId","setUserFirstName","setUserSecondName","setUserMiddleName","jwtToken","midName","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","exact","path","to","useRoutes","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c2a5eb16.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nfunction nothing() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    userFirstName: null,\r\n    userSecondName: null,\r\n    userMiddleName: null,\r\n    login: nothing,\r\n    logout: nothing,\r\n    isAuth: false,\r\n    loginReady: false\r\n})","import React, {useContext, useRef, useState,} from 'react'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport 'materialize-css'\r\nimport {useDetectOutsideClick} from \"../hooks/dropmenu.hook\";\r\nimport Modal from 'react-modal'\r\n\r\nexport const Navbar = () => {\r\n    const dropdownRef = useRef(null);\r\n    const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false);\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const onClick = () => setIsActive(!isActive);\r\n\r\n    const auth = useContext(AuthContext)\r\n    const history = useHistory()\r\n\r\n    const logoutHandler = event => {\r\n        event.preventDefault()\r\n        auth.logout()\r\n        history.push('/login')\r\n    }\r\n\r\n    const customStyles = {\r\n        content: {\r\n            top: '20%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <div className=\"nav-wrapper blue-grey lighten-1\">\r\n                    <button\r\n                        style={{marginLeft: 10}}\r\n                        onClick={onClick}\r\n                        className=\"btn cyan darken-2\">\r\n                        <span>Self (endDate grouping)</span>\r\n                    </button>\r\n                    <nav\r\n                        ref={dropdownRef}\r\n                        className={`menu ${isActive ? \"active\" : \"inactive\"}`}\r\n                    >\r\n                        <ul>\r\n                            <li><a\r\n                                href='/task?grouping=self&lapse=today'>\r\n                                Today\r\n                            </a></li>\r\n                            <li><a\r\n                                href='/task?grouping=self&lapse=thisweek'>\r\n                                This week\r\n                            </a></li>\r\n                            <li><a\r\n                                href='/task?grouping=self&lapse=nextweek'>\r\n                                Past week+\r\n                            </a></li>\r\n                        </ul>\r\n                    </nav>\r\n                    <a\r\n                        style={{marginLeft: 10}}\r\n                        className=\"btn cyan darken-2\"\r\n                        href='/task?grouping=subordinate'>\r\n                        Subordinate\r\n                    </a>\r\n                    <a\r\n                        style={{marginLeft: 10}}\r\n                        className=\"btn cyan darken-2\"\r\n                        href='/task?grouping=all'>\r\n                        All (Updated order)\r\n                    </a>\r\n\r\n                    <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                        <li\r\n                            style={{marginRight: 10}}>\r\n                            Здравствуйте, {auth.userSecondName} {auth.userMiddleName}\r\n                        </li>\r\n                        <li><a\r\n                            className=\"btn cyan darken-2\"\r\n                            href='/'\r\n                            onClick={logoutHandler}>logout\r\n                        </a></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={() => setIsOpen(false)}\r\n                style={customStyles}\r\n                contentLabel=\"Example Modal\">\r\n\r\n                <h4>Hello</h4>\r\n                <button onClick={() => setIsOpen(false)}>close</button>\r\n                <div>I am a modal</div>\r\n                <form>\r\n                    <input/>\r\n                    <button>tab navigation</button>\r\n                    <button>stays</button>\r\n                    <button>inside</button>\r\n                    <button>the modal</button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\n/**\r\n * Hook for handling closing when clicking outside of an element\r\n * @param {React.node} el\r\n * @param {boolean} initialState\r\n */\r\nexport const useDetectOutsideClick = (el, initialState) => {\r\n    const [isActive, setIsActive] = useState(initialState);\r\n\r\n    useEffect(() => {\r\n        const onClick = e => {\r\n            // If the active element exists and is clicked outside of\r\n            if (el.current !== null && !el.current.contains(e.target)) {\r\n                setIsActive(!isActive);\r\n            }\r\n        };\r\n\r\n        // If the item is active (ie open) then listen for clicks outside\r\n        if (isActive) {\r\n            window.addEventListener(\"click\", onClick);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener(\"click\", onClick);\r\n        };\r\n    }, [isActive, el]);\r\n\r\n    return [isActive, setIsActive];\r\n};\r\n","import styled from 'styled-components'\r\n\r\n\r\nexport default styled.input`\r\n  paddingLeft: 5;\r\n  marginTop: 5;`","import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [err, setErr] = useState(null)\r\n\r\n    const req = useCallback (async (url, method = 'GET', body = null, headers = {}) => {\r\n        try{\r\n            if (body){\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n            const res = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers\r\n            })\r\n            setLoading(true)\r\n            const data = await res.json()\r\n\r\n            if(!res.ok)\r\n                throw new Error(data.message)\r\n\r\n            setLoading(false)\r\n            return data\r\n        } catch(err){\r\n            setLoading(false)\r\n            setErr(err.message)\r\n            throw err\r\n        }\r\n\r\n    }, [])\r\n\r\n    const clearErr = useCallback(()=>setErr(null), [])\r\n\r\n    return {loading, req, err, clearErr}\r\n}","import {useCallback} from 'react'\r\n\r\nexport const useMessage = () => {\r\n    return useCallback(text => {\r\n        if (window.M && text){\r\n            window.M.toast({html: text})\r\n        }\r\n    }, [])\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport Modal from 'react-modal'\r\nimport Select from 'react-select'\r\nimport StyledInput from './StyledInput';\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\n\r\nexport const ModalComp = (props) => {\r\n    Modal.setAppElement(document.getElementById('root'))\r\n    const message = useMessage()\r\n    const auth = useContext(AuthContext)\r\n    const [form, setForm] = useState(props.rowData)\r\n    const {loading, req} = useHttp()\r\n\r\n    useEffect(() => {\r\n        setForm(props.rowData)\r\n    }, [props.rowData])\r\n\r\n\r\n    const priorityOptions = [\r\n        {value: 'high', label: 'Высокий'},\r\n        {value: 'medium', label: 'Средний'},\r\n        {value: 'low', label: 'Низкий'},\r\n    ]\r\n\r\n    const statusOptions = [\r\n        {value: 'toImplementation', label: 'К выполнению'},\r\n        {value: 'inProgress', label: 'Выполняется'},\r\n        {value: 'completed', label: 'Выполнено'},\r\n        {value: 'canceled', label: 'Отменено'},\r\n    ]\r\n\r\n    const changeHandler = e => {\r\n        setForm({...form, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const selectChangeHandler = (opt, ctx) => {\r\n        setForm({...form, [ctx.name]: opt.value})\r\n    }\r\n\r\n    const sendButtonHandler = async () => {\r\n        try {\r\n            const sendData = await req(`/task/${props.buttonLnk}`, 'POST', {...form, creator: auth.userId}, {\r\n                Authorization: `Bearer ${auth.token}`\r\n            })\r\n            message('Success, task id: '+sendData.id)\r\n            props.rerender()\r\n            props.onClose()\r\n        } catch (e) {\r\n            message(e.message)\r\n        }\r\n    }\r\n\r\n    const modalStyle = {\r\n        content: {\r\n            width: 750,\r\n            height: 750,\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        },\r\n        overlay: {zIndex: 1000}\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            id='modalEle'\r\n            isOpen={props.visible}\r\n            style={modalStyle}\r\n            onRequestClose={props.onClose}\r\n            contentLabel='myModal'>\r\n            <div className='row' style={{display: 'inline-block', width: '100%'}}>\r\n                <div className=''\r\n                     style={{\r\n                         textAlign: 'right',\r\n                         marginTop: '-27px',\r\n                         marginRight: '-10px',\r\n                         fontSize: 40,\r\n                         color: '#000000'\r\n                     }}>\r\n                    <i\r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={props.onClose}>\r\n                        X\r\n                    </i>\r\n                </div>\r\n                <h4 style={{\r\n                    textAlign: 'left',\r\n                    height: '100%'\r\n                }}>{props.header}</h4>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <StyledInput\r\n                    readOnly={props.isOwner}\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    value={form.title}\r\n                    onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"Title\" className=\"light-blue-text active\">Title</label>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <StyledInput\r\n                    readOnly={props.isOwner}\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    type=\"text\"\r\n                    value={form.description}\r\n                    onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"description\" className=\"light-blue-text active\">Description</label>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <StyledInput\r\n                    readOnly={props.isOwner}\r\n                    id=\"endingAt\"\r\n                    name=\"endingAt\"\r\n                    type=\"date\"\r\n                    value={form.endingAt}\r\n                    onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"endingAt\" className=\"light-blue-text active\">Ending At</label>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <Select\r\n                    isDisabled={props.isOwner}\r\n                    name='priority'\r\n                    options={priorityOptions}\r\n                    value={priorityOptions.find(obj => obj.value === form.priority)}\r\n                    onChange={selectChangeHandler}\r\n                />\r\n                <label style={{paddingBottom: 50}} htmlFor=\"priority\"\r\n                       className=\"light-blue-text active\">Priority</label>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <Select\r\n                    name='status'\r\n                    options={statusOptions}\r\n                    value={statusOptions.find(obj => obj.value === form.status)}\r\n                    onChange={selectChangeHandler}\r\n                />\r\n                <label style={{paddingBottom: 50}} htmlFor=\"status\" className=\"light-blue-text active\">Status</label>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <Select\r\n                    isDisabled={props.isOwner}\r\n                    name='responsible'\r\n                    options={props.responsibleOptions}\r\n                    value={props.responsibleOptions.find(obj => obj.value === form.responsible)}\r\n                    onChange={selectChangeHandler}\r\n                />\r\n                <label style={{paddingBottom: 50}} htmlFor=\"responsible\"\r\n                       className=\"light-blue-text active\">Responsible</label>\r\n            </div>\r\n            <button\r\n                style={{float: 'right'}}\r\n                className=\"btn cyan darken-2\"\r\n                onClick={sendButtonHandler}\r\n                disabled={loading}\r\n            >Send\r\n            </button>\r\n        </Modal>\r\n    )\r\n}","import React, {useState, useContext} from 'react'\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport dateFormat from 'dateformat';\r\nimport {ModalComp} from './Modal'\r\nimport {useMessage} from \"../hooks/message.hook\";\r\n\r\n\r\nexport const MyTable = (props) => {\r\n    const auth = useContext(AuthContext)\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [modalHeader, setModalHeader] = useState('')\r\n    const [isOwner, setIsOwner] = useState()\r\n    const [buttonLink, setButtonLink] = useState()\r\n    const message = useMessage()\r\n\r\n    const addModalContext = {\r\n        id: null,\r\n        title: 'Task name',\r\n        description: 'Task description',\r\n        priority: 'medium',\r\n        endingAt: dateFormat(new Date(), 'yyyy-mm-dd'),\r\n        responsible: auth.userId,\r\n        status: 'toImplementation',\r\n    }\r\n    const [modalContext, setModalContext] = useState(addModalContext)\r\n\r\n    const convertStatus = (status) => {\r\n        switch (status) {\r\n            case 'toImplementation':\r\n                return 'К выполнению'\r\n            case 'inProgress':\r\n                return 'Выполняется'\r\n            case 'completed':\r\n                return 'Выполнено'\r\n            case 'canceled':\r\n                return 'Отменено'\r\n            default: return\r\n        }\r\n    }\r\n\r\n    const convertPriority = (priority) => {\r\n        switch (priority) {\r\n            case 'high':\r\n                return 'Высокий'\r\n            case 'medium':\r\n                return 'Средний'\r\n            case 'low':\r\n                return 'Низкий'\r\n            default: return\r\n        }\r\n    }\r\n\r\n    const getStrColor = (status, endingAt) => {\r\n        switch (status) {\r\n            case 'completed':\r\n                return 'green lighten-3'\r\n            case 'inProgress':\r\n                if (dateFormat(Date(), 'yyyy-mm-dd') > endingAt) {\r\n                    return 'red lighten-3'\r\n                }\r\n                return 'grey lighten-1'\r\n            default:\r\n                return 'grey lighten-1'\r\n        }\r\n    }\r\n\r\n    const checkIdInResponsibleArr = (resId) => {\r\n        return props.responsible.find(obj => obj.value === resId)\r\n    }\r\n\r\n    const checkEditFieldsPermission = (taskCreatorId) => {\r\n        return (taskCreatorId === auth.userId || checkIdInResponsibleArr(taskCreatorId))\r\n    }\r\n\r\n    const editTR = (task) => {\r\n        if (!checkIdInResponsibleArr(task.responsible.id)) {\r\n            message('You have no permission')\r\n            return\r\n        }\r\n\r\n        Object.keys(props.tableData).forEach(key => {\r\n            if (Number(props.tableData[key].id) === Number(task.id)) {\r\n                setModalContext({\r\n                    id: task.id,\r\n                    title: task.title,\r\n                    description: task.description,\r\n                    priority: task.priority,\r\n                    endingAt: task.endingAt,\r\n                    responsible: task.responsible,\r\n                    status: task.status,\r\n                })\r\n            }\r\n        })\r\n        setModalHeader(`Edit task id=${task.id}`)\r\n        setIsOwner(!checkEditFieldsPermission(task.creator.id))\r\n        setButtonLink(`save?id=${task.id}`)\r\n        setModalIsOpen(true)\r\n    }\r\n\r\n\r\n    const renderHeader = () => {\r\n        if (!props.tableData.length) {\r\n            return <th>No data found</th>\r\n        }\r\n\r\n        return props.tableHeaders.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n    const renderBody = () => {\r\n        return !!props.tableData.length && props.tableData.map(\r\n            ({id, title, description, priority, endingAt, updatedAt, responsible, status, creator}) => {\r\n                const taskData = {id, title, description, priority, endingAt, updatedAt, responsible, status, creator}\r\n                return (\r\n                    <tr key={id} onClick={() => editTR(taskData)}\r\n                        className={getStrColor(status, endingAt)}>\r\n                        <td key='id'>{id}</td>\r\n                        <td key='title'>{title}</td>\r\n                        <td key='description'>{description}</td>\r\n                        <td key='priority'>{convertPriority(priority)}</td>\r\n                        <td key='endingAt'>{dateFormat(endingAt, 'dd.mm.yyyy')}</td>\r\n                        <td key='updatedAt'>{dateFormat(updatedAt, 'dd.mm.yyyy HH:MM')}</td>\r\n                        <td key='responsible'>{responsible.firstName} {responsible.secondName} {responsible.middleName}</td>\r\n                        <td key='status'>{convertStatus(status)}</td>\r\n                    </tr>\r\n                )\r\n            }\r\n        )\r\n    }\r\n\r\n    const closeModalHandler = () => {\r\n        setModalIsOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                style={{marginLeft: 10, marginTop: 10}}\r\n                id='addTask'\r\n                className=\"btn modal-trigger cyan darken-2\"\r\n                onClick={() => {\r\n                    setModalContext(addModalContext)\r\n                    setModalHeader('Add task')\r\n                    setIsOwner(false)\r\n                    setButtonLink('save')\r\n                    setModalIsOpen(true)\r\n                }}>\r\n                Add Task\r\n            </button>\r\n\r\n            <table\r\n                style={{marginTop: 5, marginLeft: 10, width: '99%'}}\r\n                id='tasks'>\r\n                <thead>\r\n                <tr className=\"cyan darken-3\">{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                {renderBody()}\r\n                </tbody>\r\n            </table>\r\n            <ModalComp\r\n                visible={modalIsOpen}\r\n                onClose={() => closeModalHandler()}\r\n                header={modalHeader}\r\n                isOwner={isOwner}\r\n                rowData={modalContext}\r\n                responsibleOptions={props.responsible}\r\n                buttonLnk={buttonLink}\r\n                rerender={props.rerender}\r\n            >\r\n            </ModalComp>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Loader = () => (\r\n    <div className=\"preloader-wrapper big active\">\r\n        <div className=\"spinner-layer spinner-blue\">\r\n            <div className=\"circle-clipper left\">\r\n                <div className=\"circle\"/>\r\n            </div>\r\n            <div className=\"gap-patch\">\r\n                <div className=\"circle\"/>\r\n            </div>\r\n            <div className=\"circle-clipper right\">\r\n                <div className=\"circle\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"spinner-layer spinner-red\">\r\n            <div className=\"circle-clipper left\">\r\n                <div className=\"circle\"/>\r\n            </div>\r\n            <div className=\"gap-patch\">\r\n                <div className=\"circle\"/>\r\n            </div>\r\n            <div className=\"circle-clipper right\">\r\n                <div className=\"circle\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"spinner-layer spinner-yellow\">\r\n            <div className=\"circle-clipper left\">\r\n                <div className=\"circle\"></div>\r\n            </div>\r\n            <div className=\"gap-patch\">\r\n                <div className=\"circle\"></div>\r\n            </div>\r\n            <div className=\"circle-clipper right\">\r\n                <div className=\"circle\"></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"spinner-layer spinner-green\">\r\n            <div className=\"circle-clipper left\">\r\n                <div className=\"circle\"></div>\r\n            </div>\r\n            <div className=\"gap-patch\">\r\n                <div className=\"circle\"></div>\r\n            </div>\r\n            <div className=\"circle-clipper right\">\r\n                <div className=\"circle\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)","import React, {useEffect, useState} from 'react'\r\nimport {useHistory, useLocation} from \"react-router-dom\"\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nexport const MyPagination = (props) => {\r\n    const history = useHistory()\r\n    const queryParams = useLocation().search;\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const pageChangeHandler = (pageNum) => {\r\n        let newQueryLink = ''\r\n        if (queryParams) {\r\n            if (new URLSearchParams(queryParams).get('page')) {\r\n                newQueryLink = new URLSearchParams(queryParams)\r\n                newQueryLink.set('page', `${pageNum}`)\r\n                newQueryLink = '?' + newQueryLink\r\n            } else\r\n                newQueryLink = queryParams + '&page=' + (pageNum)\r\n        } else {\r\n            newQueryLink = '?page=' + (pageNum)\r\n        }\r\n        history.push('task' + newQueryLink)\r\n        props.rerender()\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(props.currentPage)\r\n    }, [props.currentPage])\r\n\r\n    return (\r\n        <Pagination\r\n            activePage={currentPage}\r\n            itemsCountPerPage={1}\r\n            totalItemsCount={props.maxPages}\r\n            pageRangeDisplayed={3}\r\n            itemClass='waves-effect'\r\n            onChange={pageChangeHandler}\r\n            hideFirstLastPages={true}\r\n\r\n        />\r\n    )\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useLocation} from \"react-router-dom\";\r\nimport 'materialize-css'\r\nimport {AuthContext} from \"../context/AuthContext\"\r\nimport {Navbar} from \"../components/Navbar\"\r\nimport {MyTable} from \"../components/Table\"\r\nimport {Loader} from \"../components/Loader\";\r\nimport {MyPagination} from \"../components/Pagination\";\r\nimport {useHttp} from \"../hooks/http.hook\"\r\nimport {useMessage} from \"../hooks/message.hook\";\r\n\r\n\r\nexport const TaskPage = () => {\r\n    const auth = useContext(AuthContext)\r\n    const queryLink = useLocation().search;\r\n    const {loading, req} = useHttp()\r\n    const [tasks, setTasks] = useState([])\r\n    const [rerenderTable, setRerenderTable] = useState(1)\r\n    const [responsible, setResponsible] = useState([])\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [maxPages, setMaxPages] = useState(20) //todo...\r\n    const message = useMessage()\r\n\r\n    const getData = async () => {\r\n        try {\r\n            const data = await req(`/task/get${queryLink}`, 'GET', null, {\r\n                Authorization: `Bearer ${auth.token}`\r\n            })\r\n            setTasks(data)\r\n        } catch (e) {\r\n            message(e.message)\r\n        }\r\n    }\r\n\r\n    const getResponsible = async () => {\r\n        try {\r\n            const data = await req(`/user/${auth.userId}`, 'GET', null, {\r\n                Authorization: `Bearer ${auth.token}`\r\n            })\r\n            if (data.length === 0) {\r\n                setResponsible([{value: auth.userId, label: auth.userFirstName}])\r\n            } else {\r\n                const resps = []\r\n                Object.keys(data).forEach(key => {\r\n                    resps.push({value: data[key].id, label: data[key].firstName})\r\n                })\r\n                setResponsible(resps)\r\n\r\n            }\r\n        } catch (e) {\r\n            message(e.message)\r\n        }\r\n    }\r\n\r\n    const getCurrentPage = () => {\r\n        if (queryLink) {\r\n            const pageNum = Number(new URLSearchParams(queryLink).get('page'))\r\n            if (pageNum) {\r\n                pageNum > maxPages ? setCurrentPage(0) : setCurrentPage(pageNum)\r\n            } else\r\n                setCurrentPage(1)\r\n        } else {\r\n            setCurrentPage(1)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!auth.loginReady)\r\n            return <Loader/>\r\n\r\n        getData()\r\n        getResponsible()\r\n        getCurrentPage()\r\n\r\n    }, [auth.loginReady, req, rerenderTable])\r\n\r\n    if (loading)\r\n        return <Loader/>\r\n\r\n    return (\r\n        <>\r\n            <Navbar/>\r\n            {!loading && !!responsible.length && !!tasks && <MyTable\r\n                tableHeaders={['id', 'title', 'description', 'priority', 'ending at', 'updated at', 'responsible', 'status']}\r\n                tableData={tasks}\r\n                responsible={responsible}\r\n                rerender={() => {\r\n                    setRerenderTable(rerenderTable + 1)\r\n                }}\r\n            />}\r\n            <MyPagination\r\n                rerender={() => setRerenderTable(rerenderTable + 1)}\r\n                maxPages={maxPages}\r\n                currentPage={currentPage}\r\n            />\r\n        </>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport 'materialize-css'\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext)\r\n    const message = useMessage()\r\n    const {loading, req} = useHttp()\r\n    const [form, setForm] = useState({\r\n        login: '',\r\n        pass: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n\r\n    const changeHandler = event => {\r\n        setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            const data = await req('/auth/login', 'POST', {...form})\r\n            auth.login(data.token, data.userId, data.userFirstName, data.userSecondName, data.userMiddleName)\r\n        } catch (e) {\r\n            message(e.message)\r\n        }\r\n    }\r\n\r\n    const keypressHandler = event => {\r\n        if (event.key === 'Enter')\r\n            loginHandler()\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s6 offset-s3\">\r\n                    <h1>Auth page</h1>\r\n                    <div className=\"card blue-grey lighten-1\">\r\n                        <div className=\"card-content white-text\">\r\n                            <span className=\"card-title\" style={{textAlign: \"center\"}}>Sign in</span>\r\n                            <div style={{marginTop: 50}}>\r\n                                <div className=\"input-field\">\r\n                                    <input\r\n                                        style={{paddingLeft: 5, marginTop: 5}}\r\n                                        placeholder=\"Login\"\r\n                                        id=\"login\"\r\n                                        name=\"login\"\r\n                                        type=\"text\"\r\n                                        value={form.login}\r\n                                        onChange={changeHandler}\r\n                                        onKeyPress={keypressHandler}\r\n                                    />\r\n                                    <label htmlFor=\"login\" className=\"light-blue-text\">Login</label>\r\n                                </div>\r\n\r\n                                <div className=\"input-field\">\r\n                                    <input\r\n                                        placeholder=\"Password\"\r\n                                        id=\"pass\"\r\n                                        name=\"pass\"\r\n                                        type=\"password\"\r\n                                        value={form.pass}\r\n                                        onChange={changeHandler}\r\n                                        onKeyPress={keypressHandler}\r\n                                    />\r\n                                    <label htmlFor=\"pass\" className=\"light-blue-text\">Password</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-action\" style={{textAlign: \"center\"}}>\r\n                            <button\r\n                                className=\"btn cyan darken-2\"\r\n                                onClick={loginHandler}\r\n                                onKeyPress={keypressHandler}\r\n                                disabled={loading}\r\n                            >\r\n                                Send form\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\nimport 'materialize-css'\nimport {useRoutes} from \"./routes\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {useAuth} from \"./hooks/auth.hook\";\nimport {AuthContext} from \"./context/AuthContext\";\nimport {Loader} from \"./components/Loader\";\n\nfunction App() {\n    const {\n        token,\n        userId,\n        userFirstName,\n        userSecondName,\n        userMiddleName,\n        login,\n        logout,\n        localAuthReady,\n        loginReady\n    } = useAuth()\n    const isAuth = !!token\n    const routes = useRoutes(isAuth)\n\n    if (!localAuthReady) {\n        return <Loader/>\n    }\n    return (\n        <AuthContext.Provider value={{\n            token,\n            userId,\n            userFirstName,\n            userSecondName,\n            userMiddleName,\n            login,\n            logout,\n            isAuth,\n            loginReady\n        }}>\n            <>\n                <Router>\n                    {routes}\n                </Router>\n            </>\n        </AuthContext.Provider>\n\n    )\n}\n\nexport default App;\n","import {useState, useCallback, useEffect} from 'react'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [localAuthReady, setLocalAuthReady] = useState(false) // for wait async check isAuth\r\n    const [loginReady, setLoginReady] = useState(false)\r\n    const [userId, setUserId] = useState(null)\r\n    const [userFirstName, setUserFirstName] = useState(null)\r\n    const [userSecondName, setUserSecondName] = useState(null)\r\n    const [userMiddleName, setUserMiddleName] = useState(null)\r\n\r\n    const login = useCallback((jwtToken, id, firstName, name, midName) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n        setUserFirstName(firstName)\r\n        setUserSecondName(name)\r\n        setUserMiddleName(midName)\r\n\r\n        localStorage.setItem('userData', JSON.stringify({\r\n            token: jwtToken,\r\n            userId: id,\r\n            userFirstName: firstName,\r\n            userSecondName: name,\r\n            userMiddleName: midName\r\n        }));\r\n\r\n        setLoginReady(true)\r\n    }, [])\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setUserId(null)\r\n        setUserFirstName(null)\r\n        setUserSecondName(null)\r\n        setUserMiddleName(null)\r\n        localStorage.removeItem('userData')\r\n        setLoginReady(false)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem('userData'))\r\n\r\n        if (data && data.token){\r\n            login(data.token, data.userId, data.userFirstName, data.userSecondName, data.userMiddleName)\r\n        }\r\n\r\n        setLocalAuthReady(true)\r\n    }, [login])\r\n\r\n\r\n    return {login, logout, token, userId, userFirstName, userSecondName, userMiddleName, localAuthReady, loginReady}\r\n}","import React from \"react\"\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {TaskPage} from \"./pages/TaskPage\";\r\nimport {AuthPage} from \"./pages/AuthPage\";\r\n\r\nexport const useRoutes = isAuth => {\r\n    if (isAuth) {\r\n        return (\r\n            <Switch>\r\n                <Route exact path=\"/task\">\r\n                    <TaskPage/>\r\n                </Route>\r\n\r\n                <Redirect to=\"/task?group=3\"/>\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/auth/login\">\r\n                <AuthPage/>\r\n            </Route>\r\n\r\n            <Redirect to=\"/auth/login\"/>\r\n        </Switch>\r\n    )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}